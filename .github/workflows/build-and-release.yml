name: Build and Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Visual Studio 2019
      uses: microsoft/setup-msbuild@v1

    - name: Install Windows SDK
      run: choco install windows-sdk-10.0

    - name: Install CUDA
      run: choco install cuda

    - name: Install cuDNN
      run: |
        curl -L -o cudnn.zip "https://developer.download.nvidia.com/compute/redist/cudnn/v8.3.2/cudnn-11.4-windows-x64-v8.3.2.44.zip"
        unzip cudnn.zip -d C:\tools\cuda

    - name: Set Up Project Structure
      run: mkdir sunone_aimbot_cpp\modules

    - name: Install CMake
      run: choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'

    - name: Build OpenCV with CUDA Support
      run: |
        git clone https://github.com/opencv/opencv.git --branch 4.10.0 --depth 1
        git clone https://github.com/opencv/opencv_contrib.git --branch 4.10.0 --depth 1
        mkdir sunone_aimbot_cpp\modules\opencv\build
        cd sunone_aimbot_cpp\modules\opencv\build
        cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=install -D OPENCV_EXTRA_MODULES_PATH=..\opencv_contrib\modules -D WITH_CUDA=ON -D WITH_CUBLAS=ON -D ENABLE_FAST_MATH=ON -D CUDA_FAST_MATH=ON -D WITH_CUDNN=ON -D CUDNN_LIBRARY=C:\tools\cuda\lib\x64\cudnn.lib -D CUDNN_INCLUDE_DIR=C:\tools\cuda\include -D CUDA_ARCH_BIN=8.6 -D OPENCV_DNN_CUDA=ON -D BUILD_opencv_world=ON ..
        cmake --build . --target INSTALL --config Release

    - name: Download Required Libraries
      run: |
        curl -L -o boost.zip "https://disk.yandex.ru/d/O8XkcKeQ3vNDFg"
        curl -L -o tensorrt.zip "https://disk.yandex.ru/d/S16C9oDSuF1_EQ"
        unzip boost.zip -d sunone_aimbot_cpp\modules
        unzip tensorrt.zip -d sunone_aimbot_cpp\modules

    - name: Compile Boost Libraries
      run: |
        cd sunone_aimbot_cpp\modules\boost_1_82_0
        bootstrap.bat vc142
        b2.exe --build-type=complete link=static runtime-link=static threading=multi variant=release

    - name: Verify Folder Structure
      run: |
        tree sunone_aimbot_cpp

    - name: Configure Project Settings
      run: |
        nuget install Microsoft.Windows.CppWinRT

    - name: Verify CUDA Integration
      run: |
        msbuild /t:BuildCustomizations /p:CUDA=12.4

    - name: Build the Project
      run: msbuild sunone_aimbot_cpp.sln /p:Configuration=Release

    - name: Prepare release assets
      run: mkdir -p release && cp sunone_aimbot_cpp\Release\ai.exe release/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release/ai.exe
        asset_name: ai.exe
        asset_content_type: application/octet-stream
